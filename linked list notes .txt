
Struct Node { 
int data; 
Node* next; } 

there is a data structure named Node. 
That data structure consists of a integer value data 
and a 
pointer to Node structure named next;

no where the Node* next is pointing to the next pointer 
until unless we add the value of next to be of next node. 

this is just a data structure with two things in it. 













when we declare a linked list 
we declare each node of linked list 
we do not declare entire linked list in one function
multiple individual nodes when connected become a linked list 





//defining a structure called raju 
struct Raju{ 
// that structure, contains the data type integer
	int data; 
// then we are creating a node to the data structure similar to raju 
//raju* means a pointer that is just like the data structure raju, then that pointer is named shamu
	Raju* shamu; 
} 








how to pass linked list in function parameter 

function ( Raju* Head) { } ; 

function ( a_pointer_similar_to_the_data_structure * (it is a pointer)  Name_of_the_pointer) 

or 
function (Raju* &Head) 
so that the when we are passing the pointer, 
only the reference of that pointer is passed, a copy is not formed 






















syntax to declare a new node 

pointer_to_dataStructure* NameofPointer = new dataStructure(): 

Raju* kalu = new Raju(); 


so basically we first created a new pointer kalu that was according to the Raju data structure, 
then we intiated one more of that by calling new Raju(); 








kalu->data = value ; 

kalu->data is shorthand for (*kalu).data 







 






